Test case id: 1
Unit to test: mainMenu presents the menu of the game
Assumptions: NA
Test data: NA
Expected result: Display options Start new game, Load Game, Quit and wait for input
Actual result: Display options Start new game, Load Game, Quit and wait for input
Pass/Fail: Pass
Comments: NA

Test case id: 2
Unit to test: incorrect numerical input on main menu defaults to "Invalid Option. Try again"
Assumptions: Can take options other than 1,2,3 but defaults to "Invalid Option"
Test data: startGame()'s option variable
Expected result: "Invalid option. Try again..."
Actual result: "Invalid option. Try again..."
Pass/Fail: Pass
Comments: Will not pass with double values

Test case id: 3
Unit to test: alphabetic input on main menu defaults to "Invalid Option. Try again"
Assumptions: Can take options other than 1,2,3 but defaults to "Invalid Option" 
Test data: startGame()'s option variable
Expected result: "Invalid option. Try again..."
Actual result: Exception in thread "main" java.util.InputMismatchException
Pass/Fail: Fail
Comments: Will not pass with any Alphabetic input

Test case id: 4
Unit to test: special character input on main menu defaults to "Invalid Option. Try again"
Assumptions: Can take options other than 1,2,3 but defaults to "Invalid Option" 
Test data: startGame()'s option variable
Expected result: "Invalid option. Try again..."
Actual result: Exception in thread "main" java.util.InputMismatchException
Pass/Fail: Fail
Comments: Will not pass with any special character input

Test case id: 5
Unit to test: Input '3' will close keyboard input and exit the game
Assumptions: The game stops when quit variable becomes true
Test data: startGame()'s quit variable
Expected result: "Thank you for playing Spy Game."
Actual result: "Thank you for playing Spy Game."
Pass/Fail: Pass
Comments: NA

Test case id: 6
Unit to test: incorrect numerical input on debug menu defaults to "Invalid Option. Try again"
Assumptions: The game will request different input
Test data: newGameMessage()'s option variable
Expected result: "Invalid Option. Try again"
Actual result: New game starts with debug mode off
Pass/Fail: Fail
Comments: NA

Test case id: 7
Unit to test: alphabetic input on debug menu defaults to "Invalid Option. Try again"
Assumptions: The game will request different input
Test data: newGameMessage()'s option variable
Expected result: Invalid Option. Try again"
Actual result: Exception in thread "main" java.util.InputMismatchException
Pass/Fail: Fail
Comments: NA

Test case id: 8
Unit to test: special character input on debug menu defaults to "Invalid Option. Try again"
Assumptions: The game will request different input
Test data: newGameMessage()'s option variable
Expected result: Invalid Option. Try again"
Actual result: Exception in thread "main" java.util.InputMismatchException
Pass/Fail: Fail
Comments: NA

Test case id: 9
Unit to test: input 0 will start new game from debug menu without debugging mode enabled
Assumptions: All grid objects are hidden unless a power up spawned in immediate area
Test data: boardString()'s className variable
Expected result: ' ' unless power up, in which case would be U, I and or D for Bullet, Invincibility and Radar respectively
Actual result: ' ' unless power up, in which case would be U, I and or D for Bullet, Invincibility and Radar respectively
Pass/Fail: Pass
Comments: NA

Test case id: 10
Unit to test: input 1 will start new game from debug menu with debugging mode enabled
Assumptions: All grid objects are shown across the board
Test data: boardString()'s className variable
Expected result: ' ' unless power up, Ninja, Room or Briefcase 
Actual result: ' ' unless power up, Ninja, Room or Briefcase 
Pass/Fail: Pass
Comments: NA

Test case id: 11
Unit to test: walk to the left at the player's initial position
Assumptions: Player should not be able to go out of the grid
Test data: Player out of grid bounds
Expected result: Player stays at initial position, output try again
Actual result: Player stays at initial position, output try again
Pass/Fail: Pass
Comments: NA

Test case id: 11
Unit to test: walk left from the player's initial position
Assumptions: Player should not be able to go out of the grid
Test data: Player out of grid bounds
Expected result: Player stays at initial position, output try again
Actual result: Player stays at initial position, output try again
Pass/Fail: Pass
Comments: NA

Test case id: 12
Unit to test: walk down a unit from the player's initial position
Assumptions: Player should not be able to go out of the grid
Test data: Player out of grid bounds
Expected result: Player stays at initial position, output try again
Actual result: Player stays at initial position, output try again
Pass/Fail: Pass
Comments: NA
